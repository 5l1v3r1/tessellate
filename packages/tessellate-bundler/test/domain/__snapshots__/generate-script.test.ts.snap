// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`script-builder should build a fragment script string from a content structure 1`] = `
"import React from \\"react\\";
import ReactDOM from \\"react-dom\\";
import mosaicComponentExample from \\"mosaic-component-example\\";

export const Root = props => {
  return (
    <div id=\\"root\\" data-props={JSON.stringify(props)}>
      {getElements(props)}
    </div>
  );
};

const getElements = props => {
  const bundledProps = {};
  const mergedProps = Object.assign({}, bundledProps, props);
  const getProps = pointerFn => pointerFn(mergedProps);
  return React.createElement(
    \\"div\\",
    null,

    React.createElement(mosaicComponentExample, { level: 3 }, \`Hello, World!\`)
  );
};

export default function render(element) {
  const props = JSON.parse(element.getAttribute(\\"data-props\\"));
  ReactDOM.render(getElements(props), element);
}
"
`;

exports[`script-builder should build a fragment script string with multiple component imports 1`] = `
"import React from \\"react\\";
import ReactDOM from \\"react-dom\\";
import { MyComponent1, MyComponent2 } from \\"node-module-a\\";
import { MyComponent } from \\"node-module-b\\";

export const Root = props => {
  return (
    <div id=\\"root\\" data-props={JSON.stringify(props)}>
      {getElements(props)}
    </div>
  );
};

const getElements = props => {
  const bundledProps = {};
  const mergedProps = Object.assign({}, bundledProps, props);
  const getProps = pointerFn => pointerFn(mergedProps);
  return React.createElement(
    MyComponent1,
    null,

    React.createElement(MyComponent2, null),
    React.createElement(MyComponent2, null),
    React.createElement(MyComponent, null)
  );
};

export default function render(element) {
  const props = JSON.parse(element.getAttribute(\\"data-props\\"));
  ReactDOM.render(getElements(props), element);
}
"
`;
